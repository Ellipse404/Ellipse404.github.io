{"version":3,"file":"static/js/776.702fa0db.chunk.js","mappings":"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","sources":["constants/error.js","utils/index.js","components/CustomTextField/index.js","containers/SignUp/Google.js","containers/SignUp/Github.js","components/DropDown/index.js","components/FileDownload/index.js","containers/SignUp/index.js","schema/validation_schema.js"],"sourcesContent":["const errors = {\r\n  generic: \"Something went wrong\",\r\n  required: \"This is a required field\",\r\n  maxLength: \"Should not exceed %s characters\",\r\n  minLength: \"Should be atleast %s characters\",\r\n  number: \"Must be a number\",\r\n  alpha: \"Must be Alphabets\",\r\n  invalidEmail: \"Invalid Email\",\r\n  alphanumeric: \"Accepts alphabets and numbers\",\r\n  characters: `Accepts only %s character(s)`,\r\n  decimal: \"Number field must have %s digits after decimal or less\",\r\n  maxNumber: \"Should not exceed %s\",\r\n  minNumber: \"Cannot be less than %s\",\r\n  endDate: \"End Date cannot be before Start Date\",\r\n  taxRange: \"Tax percentage cannot be more than 100%\",\r\n  subTaxValue1: \"Subtax1 cannot be greated than tax\",\r\n  subTaxValue2: \"Subtax2 cannot be greated than tax\",\r\n  subTax: \"Subtax cannot be greated than tax\",\r\n  taxSum: \"Sum of subtax should be equal to tax\",\r\n  image: \"This is not of type image\",\r\n  url: \"Enter correct url\",\r\n  imageRatio: \"The Image doesnt have the required dimension of 4:3\",\r\n  sameServeSize: \"Products with same serve size can not be selected\",\r\n  positiveInteger: \"The number should be positive\",\r\n  isNumber: \"The Number should not be decimal\",\r\n  minimum: \"Mininmum cannot be greter than maximum\",\r\n  maximum: \"Maximum cannot be less than maximum\",\r\n  phone: \"Must be a valid phone number\",\r\n  password: \"Must conatin atleast one alphabet, number, and %s character\",\r\n  confirmpassword: \"Passwords must match\",\r\n  email: \"Must be of type email\",\r\n  permissionRequired: \"Atleast one permission needs to be selected\",\r\n  subCustomisation: \"There should be atleast 2 Customisation items\",\r\n  listItem: \"There must be atleast 2 List items\",\r\n  accountCreation: \"Great to see you here !! \"\r\n};\r\n\r\nexport default errors;\r\n","export function pxToRem(value) {\r\n  return `${value / 16}rem`\r\n}","import React from 'react';\r\nimport { TextField, InputAdornment, Typography } from '@mui/material';\r\nimport { makeStyles, styled } from '@mui/styles';\r\n// import CustomToolTip from '../CustomToolTip';\r\n// import Icons from '../../constants/icons';\r\nimport { pxToRem } from '../../utils';\r\n\r\nconst useStyles = makeStyles(({ spacing, palette }) => ({\r\n  customInput: {\r\n    '& .MuiInputAdornment-positionEnd': {\r\n      height: 'auto',\r\n      maxHeight: 'none',\r\n      flexDirection: 'column',\r\n      marginBottom: 'auto',\r\n    },\r\n    '& .MuiOutlinedInput-adornedEnd': {\r\n      paddingRight: 0,\r\n    },\r\n    '& .MuiInputLabel-shrink ': {\r\n      display: 'flex',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      maxWidth: '100%',\r\n    },\r\n    '&.MuiInputLabel-root': {\r\n      color: palette.primary.light,\r\n    },\r\n  },\r\n\r\n  InputInfo: {\r\n    color: palette.primary.dark2,\r\n    width: 14,\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  InputMaxLength: {\r\n    color: palette.primary.medium3,\r\n    backgroundColor: palette.primary.accordian,\r\n    fontSize: '10px !important',\r\n    fontFamily: 'Nunito Sans',\r\n    fontWeight: 'bold',\r\n    fontstretch: 'normal',\r\n    fontStyle: 'normal',\r\n    lineHeight: 'normal',\r\n    letterSpacing: 'normal',\r\n    width: 20,\r\n    height: 20,\r\n    top: '33px',\r\n    borderRadius: pxToRem(4),\r\n    // borderBottomRightRadius: pxToRem(2),\r\n    position: 'absolute',\r\n    right: 0,\r\n    bottom: 2,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  tooltip: {\r\n    backgroundColor: palette.lightGrey,\r\n    height: 35,\r\n    width: 20,\r\n    textAlign: 'center',\r\n    padding: spacing(0.5),\r\n    borderBottomLeftRadius: pxToRem(2),\r\n    borderTopRightRadius: pxToRem(2),\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  chip: {\r\n    backgroundColor: palette.primary.light2,\r\n    color: palette.primary.main,\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  passwordIcon: {\r\n    color: palette.primary.main,\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  infoList: {\r\n    margin: 0,\r\n    padding: spacing(1, 1, 1, 3),\r\n  },\r\n  inputIcons: {\r\n    backgroundColor: '#c5cbcf',\r\n    // display\r\n  },\r\n}));\r\n\r\nconst CustomTextField = styled((props) => (\r\n  <TextField InputProps={{ disableUnderline: true }} {...props} />\r\n))(({ theme }) => ({\r\n  '& label.Mui-focused': {\r\n    color: `${theme.palette.primary.dark2} !important`,\r\n  },\r\n  '& .MuiFilledInput-root': {\r\n    // height: '56px',\r\n    border: `1px solid ${theme.palette.primary.light}`,\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: theme.palette.white,\r\n    fontSize: '14px',\r\n    fontWeight: 'normal',\r\n    fontStretch: 'normal',\r\n    fontStyle: 'normal',\r\n    lineHeight: 'normal',\r\n    letterSpacing: 'normal',\r\n    color: '#2f2f2f',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.white,\r\n    },\r\n    '&.Mui-focused': {\r\n      backgroundColor: theme.palette.white,\r\n      borderColor: '#5142b3',\r\n    },\r\n    '&.MuiInputBase-root.Mui-disabled': {\r\n      backgroundColor: `${theme.palette.lightGrey} !important`,\r\n      border: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst TextBoxInputField = ({\r\n  type = 'text',\r\n  value,\r\n  // setValue,\r\n  placeholder,\r\n  errorMessage,\r\n  information,\r\n  endAdornment,\r\n  inputLengthRem,\r\n  maxLength,\r\n  toolTipClassName,\r\n  minRows,\r\n  multiline,\r\n  variant = 'filled',\r\n  name,\r\n  onChange,\r\n  error,\r\n  helperText,\r\n  defaultValue,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CustomTextField\r\n        {...props}\r\n        type={type}\r\n        label={placeholder}\r\n        name={name}\r\n        id='filled-error-helper-text'\r\n        error={Boolean(error)}\r\n        helperText={helperText}\r\n        variant={variant}\r\n        style={{ width: props.width || 'inherit' }}\r\n        value={value}\r\n        defaultValue={defaultValue}\r\n        minRows={props.minRows}\r\n        multiline={props.multiline}\r\n        autoComplete='off'\r\n        onChange={onChange}\r\n        InputLabelProps={{\r\n          style: { color: '#c5cbcf' },\r\n        }}\r\n        InputProps={{\r\n          disableUnderline: true,\r\n          endAdornment: (\r\n            <InputAdornment position='end'>\r\n              <div className={classes.inputIcons}>\r\n                {maxLength && (\r\n                  <Typography\r\n                    className={`${classes.InputMaxLength} custom-input-max-length`}>\r\n                    {inputLengthRem < maxLength\r\n                      ? maxLength - inputLengthRem\r\n                      : inputLengthRem > maxLength ||\r\n                        inputLengthRem === maxLength\r\n                      ? '0'\r\n                      : maxLength}\r\n                  </Typography>\r\n                )}\r\n              </div>\r\n              {endAdornment}\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TextBoxInputField;\r\n","import React from \"react\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport { GoogleLogo } from \"../../components/Icons/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  customBtn: {\r\n    width: \"300px !important\",\r\n    height: \"60px !important\",\r\n    background: \"#E74C3C !important\",\r\n    borderRadius: \"6px !important\",\r\n  },\r\n\r\n  customText: {\r\n    fontFamily: \"Helvetica Neue\",\r\n    color: \"whitesmoke\",\r\n    paddingLeft: \"8px\",\r\n  },\r\n}));\r\n\r\nconst Google = () => {\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const responseGoogle = (response) => {\r\n    localStorage.setItem(\"username\", response.profileObj.givenName);\r\n    localStorage.setItem(\"profileImage\", response.profileObj.imageUrl);\r\n    console.log(\r\n      \"firstname :: \",\r\n      response.profileObj.givenName,\r\n      \"lastname :: \",\r\n      response.profileObj.familyName,\r\n      \"Email Id :: \",\r\n      response.profileObj.email,\r\n      \"Google Id :: \",\r\n      response.profileObj.googleId,\r\n      \"Image Id :: \",\r\n      response.profileObj.imageUrl\r\n    );\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: process.env.REACT_APP_API_URL,\r\n      data: { response },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"GOOGLE SIGNIN SUCCESS\", response);\r\n        console.log(\r\n          \"GOOGLE SIGNIN SUCCESS response.tokenId -->>\",\r\n          response.tokenId\r\n        );\r\n        toast.success(\"Success !!\", { pauseOnHover: false, autoClose: 1000 });\r\n        window.setTimeout(function () {\r\n          navigate(\"/login\");\r\n        }, 2000);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"GOOGLE SIGNIN ERROR\", error);\r\n        toast.error(error, {\r\n          position: \"bottom-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: false,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"pb-3\">\r\n      <GoogleLogin\r\n        render={(renderProps) => (\r\n          <Button\r\n            className={classes.customBtn}\r\n            onClick={renderProps.onClick}\r\n            disabled={renderProps.disabled}\r\n          >\r\n            <GoogleLogo />\r\n            <Typography className={classes.customText}>\r\n              Login with Google\r\n            </Typography>\r\n          </Button>\r\n        )}\r\n        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        // buttonText=\"Login with Google\"\r\n        cookiePolicy={\"single_host_origin\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Google;\r\n","import React from \"react\";\r\nimport { Button, Typography, Stack } from \"@mui/material\";\r\nimport LoginGithub from \"react-login-github\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { GithubLogo } from \"../../components/Icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gitBtn: {\r\n    color: \"#fff\",\r\n    width: \"300px !important\",\r\n    height: \"60px !important\",\r\n    backgroundColor: \"#444\",\r\n    borderColor: \"rgba(0,0,0,0.2)\",\r\n    borderRadius: \"6px !important\",\r\n  },\r\n\r\n  gitText: {\r\n    fontFamily: \"Helvetica Neue\",\r\n    color: \"whitesmoke\",\r\n    paddingLeft: \"12px !important\",\r\n  },\r\n}));\r\n\r\nconst GithubLoginComponent = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const onSuccess = (response) => {\r\n    console.log(response);\r\n    toast.success(\"Success !!\", { pauseOnHover: false, autoClose: 1000 });\r\n    window.setTimeout(function () {\r\n      navigate(\"/login\");\r\n    }, 2000);\r\n  };\r\n  const onFailure = (err) => {\r\n    console.error(err);\r\n    toast.error(err, {\r\n      position: \"bottom-right\",\r\n      autoClose: 1000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    window.setTimeout(function () {\r\n      navigate(\"/signup\");\r\n    }, 2000);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <LoginGithub\r\n        className={classes.gitBtn}\r\n        clientId={process.env.REACT_APP_GITHUB_LOGIN_KEY}\r\n        buttonText={\r\n          <Stack direction=\"row\" justifyContent=\"center\">\r\n            <GithubLogo />\r\n            <Typography className={classes.gitText}>\r\n              LOGIN WITH GITHUB\r\n            </Typography>\r\n          </Stack>\r\n        }\r\n        onSuccess={onSuccess}\r\n        onFailure={onFailure}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GithubLoginComponent;\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\nexport default function DropdownComponent({ childToParent, ...props }) {\r\n  const [params, setParams] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setParams(event.target.value);\r\n    childToParent(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl fullWidth>\r\n        <InputLabel\r\n          id=\"demo-simple-select-label\"\r\n          sx={{ padding: \"0px !important\" }}\r\n        >\r\n          {props.inputLab}\r\n        </InputLabel>\r\n        <Select\r\n          sx={{\r\n            minWidth: 120,\r\n            minHeight: \"30px !important\",\r\n            boxSizing: \"border-box\",\r\n            padding: \"0px !important\",\r\n            fontSize: \"0.870rem !important\",\r\n            borderRadius: \"0.30em\",\r\n          }}\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={params}\r\n          label={props.inputLab || \"Age\"}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={1}>{props.first}</MenuItem>\r\n          <MenuItem value={2}>{props.second}</MenuItem>\r\n          <MenuItem value={3}>{props.third}</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n","import { Stack } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DropdownComponent from \"../DropDown\";\r\nimport CloudDownloadIcon from \"@mui/icons-material/CloudDownload\";\r\n\r\nconst FileDownloadComponent = () => {\r\n  const [data, setData] = useState(\"\");\r\n  const childToParent = (childdata) => {\r\n    setData(childdata);\r\n  };\r\n\r\n  console.log(\"params : => \", data);\r\n\r\n  const fileFormat =\r\n    data == 1\r\n      ? \"Terms n Conditions.pdf\"\r\n      : data == 2\r\n      ? \"Terms n Conditions.docx\"\r\n      : \"Terms n Conditions.txt\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Link to={fileFormat} target=\"_blank\" download>\r\n          <CloudDownloadIcon\r\n            variant=\"small\"\r\n            sx={{ color: \"grey !important\" }}\r\n          />\r\n        </Link>\r\n        <div>&nbsp;&nbsp;&nbsp;</div>\r\n        <DropdownComponent\r\n          inputLab=\"Format\"\r\n          first=\".pdf\"\r\n          second=\".docx\"\r\n          third=\".txt\"\r\n          childToParent={childToParent}\r\n        />\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FileDownloadComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  Checkbox,\r\n  Typography,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { startsWith } from \"lodash\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport {\r\n  userNameValidation,\r\n  emailValidation,\r\n  contactNoValidation,\r\n  passwordValidation,\r\n  confirmPasswordValidation,\r\n} from \"../../schema/validation_schema\";\r\nimport TextBoxInputField from \"../../components/CustomTextField\";\r\nimport Google from \"./Google\";\r\nimport { authenticate, isAuth } from \"../../utils/helper\";\r\nimport GithubLoginComponent from \"./Github\";\r\nimport FileDownloadComponent from \"../../components/FileDownload\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport Info from '../../constants/error'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  parentDiv: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  childDiv: {\r\n    display: \"flex\",\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  centered_div: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  stackClass: {\r\n    width: \"600px !important\",\r\n    height: \"500px !important\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  txtBox: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  controlledClass: {\r\n    padding: \"6px\",\r\n  },\r\n\r\n  helperText: {\r\n    color: \"#d32f2f !important\",\r\n    backgroundColor: \"transparent !important\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"0.75rem\",\r\n    lineHeight: \"1.66\",\r\n    letterSpacing: \"0.03333em\",\r\n    marginLeft: \"14px\",\r\n  },\r\n\r\n  btnContainer: {\r\n    position: \"absolute\",\r\n    top: 40,\r\n    right: 40,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"140px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nconst SignUpComponent = () => {\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n\r\n  // Email service :\r\n  const sendEmail = (temp) => {\r\n    emailjs\r\n      .send(process.env.REACT_APP_EMAILJS_SERVICE_ID, process.env.REACT_APP_EMAILJS_TEMPLATE_ID, temp, process.env.REACT_APP_EMAILJS_USER_ID)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"Email js Res :\", res.status, res.text);\r\n        },\r\n        (err) => {\r\n          console.log(\"Email js Err :\", err);\r\n        }\r\n      );\r\n  };\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(\r\n      yup.object().shape({\r\n        username: userNameValidation,\r\n        email: emailValidation,\r\n        contact_no: contactNoValidation,\r\n        password: passwordValidation,\r\n        confirmpassword: confirmPasswordValidation,\r\n      })\r\n    ),\r\n    mode: \"all\",\r\n  });\r\n  const url_api = process.env.REACT_APP_API_URL;\r\n  const onSubmit = async (data) => {\r\n    console.log(\"!async => \", data.email);\r\n    const templateParams = {\r\n      user_email: data.email,\r\n      to_name: data.username,\r\n      from_name: \"ReactX\",\r\n      message: Info.accountCreation,\r\n    };\r\n\r\n    try {\r\n      await axios({\r\n        method: \"POST\",\r\n        url: url_api,\r\n        data: data,\r\n      })\r\n        .then((response) => {\r\n          console.log(\"success\", response);\r\n          localStorage.setItem(\"username\", response.data[0].username);\r\n          sendEmail(templateParams);\r\n          toast.success(\"Success !!\", { pauseOnHover: false, autoClose: 1000 });\r\n          window.setTimeout(function () {\r\n            navigate(\"/login\");\r\n          }, 2000);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"error\", err);\r\n          toast.error(err, {\r\n            position: \"bottom-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        });\r\n    } catch (err) {\r\n      console.log(\"what the err !!\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box className={classes.parentDiv}>\r\n        <Box className={classes.childDiv}>\r\n          <form>\r\n            <FormControl>\r\n              <Box className={classes.stackClass}>\r\n                <Box>\r\n                  <Controller\r\n                    name=\"username\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <TextField\r\n                        className={classes.txtBox}\r\n                        {...field}\r\n                        id=\"outlined-basic\"\r\n                        name=\"username\"\r\n                        label=\"Username*\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Username\"\r\n                        error={errors.username ? true : false}\r\n                        helperText={errors.username?.message}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Box>\r\n                <Box>\r\n                  <Controller\r\n                    name=\"email\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <TextField\r\n                        className={classes.txtBox}\r\n                        {...field}\r\n                        id=\"outlined-basic\"\r\n                        name=\"email\"\r\n                        label=\"Email*\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Email\"\r\n                        error={errors.email ? true : false}\r\n                        helperText={errors.email?.message}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Box>\r\n                <Box>\r\n                  <Controller\r\n                    name=\"password\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <TextField\r\n                        className={classes.txtBox}\r\n                        {...field}\r\n                        id=\"outlined-basic\"\r\n                        name=\"password\"\r\n                        label=\"Password*\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        error={errors.password ? true : false}\r\n                        helperText={errors.password?.message}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Box>\r\n                <Box>\r\n                  <Controller\r\n                    name=\"confirmpassword\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <TextField\r\n                        className={classes.txtBox}\r\n                        {...field}\r\n                        id=\"outlined-basic\"\r\n                        name=\"confirmpassword\"\r\n                        label=\"Confirm Password*\"\r\n                        variant=\"outlined\"\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        error={errors.confirmpassword ? true : false}\r\n                        helperText={errors.confirmpassword?.message}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Box>\r\n                <Box>\r\n                  <Controller\r\n                    name=\"contact_no\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <>\r\n                        <PhoneInput\r\n                          {...field}\r\n                          enableSearch\r\n                          placeholder=\"Contact No*\"\r\n                          disableCountryGuess\r\n                          disableCountryCode\r\n                          country={\"in\"}\r\n                          onChange={(\r\n                            value,\r\n                            { dialCode },\r\n                            e,\r\n                            formattedValue\r\n                          ) => {\r\n                            if (dialCode) {\r\n                              setValue(\"dial_code\", dialCode);\r\n                              if (startsWith(value, dialCode)) {\r\n                                field.onChange(value.replace(dialCode, \"\"));\r\n                              } else {\r\n                                field.onChange(value);\r\n                              }\r\n                            } else {\r\n                              setValue(\"dial_code\", \"91\");\r\n                              field.onChange(value);\r\n                            }\r\n                          }}\r\n                        />\r\n\r\n                        {errors.contact_no ? (\r\n                          <span className={classes.helperText}>\r\n                            {errors.contact_no?.message}\r\n                          </span>\r\n                        ) : errors.dial_code ? (\r\n                          <span className={classes.helperText}>\r\n                            {errors.dial_code?.message}\r\n                          </span>\r\n                        ) : (\r\n                          <span>\r\n                            <br />\r\n                          </span>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  />\r\n                </Box>\r\n                <Stack direction=\"row\" alignItems=\"center\">\r\n                  <Checkbox />\r\n                  <Typography>\r\n                    Accept Terms & Conditions &nbsp;&nbsp;\r\n                  </Typography>\r\n                  <FileDownloadComponent />\r\n                </Stack>\r\n\r\n                <Box className={classes.centered_div}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    type=\"submit\"\r\n                    onClick={handleSubmit(onSubmit)}\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </FormControl>\r\n            <ToastContainer position=\"bottom-right\" theme=\"colored\" />\r\n          </form>\r\n        </Box>\r\n      </Box>\r\n      <Box className={classes.btnContainer}>\r\n        <div className=\"glogin\">\r\n          <Google />\r\n        </div>\r\n        <div>\r\n          <GithubLoginComponent />\r\n        </div>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUpComponent;\r\n","import * as yup from \"yup\";\r\nimport errors from \"../constants/error\";\r\n\r\nexport const userNameValidation = yup.string().required(errors.required);\r\n\r\nexport const emailValidation = yup\r\n  .string(errors.email)\r\n  .email(errors.invalidEmail)\r\n  .required(errors.required);\r\n\r\nexport const contactNoValidation = yup\r\n  .string()\r\n  .matches(\r\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\r\n    errors.phone\r\n  )\r\n  .required(errors.required);\r\n\r\nexport const passwordValidation = yup.string().required(errors.required);\r\n// .matches(\r\n//   /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n//   errors.password\r\n// );\r\n\r\nexport const confirmPasswordValidation = yup\r\n  .string()\r\n  .required(errors.required)\r\n  .oneOf([yup.ref(\"password\"), null], errors.confirmpassword);\r\n"],"names":["generic","required","maxLength","minLength","number","alpha","invalidEmail","alphanumeric","characters","decimal","maxNumber","minNumber","endDate","taxRange","subTaxValue1","subTaxValue2","subTax","taxSum","image","url","imageRatio","sameServeSize","positiveInteger","isNumber","minimum","maximum","phone","password","confirmpassword","email","permissionRequired","subCustomisation","listItem","accountCreation","pxToRem","value","makeStyles","spacing","palette","customInput","height","maxHeight","flexDirection","marginBottom","paddingRight","display","maxWidth","color","primary","light","InputInfo","dark2","width","cursor","InputMaxLength","medium3","backgroundColor","accordian","fontSize","fontFamily","fontWeight","fontstretch","fontStyle","lineHeight","letterSpacing","top","borderRadius","position","right","bottom","justifyContent","alignItems","tooltip","lightGrey","textAlign","padding","borderBottomLeftRadius","borderTopRightRadius","chip","light2","main","passwordIcon","infoList","margin","inputIcons","styled","props","TextField","InputProps","disableUnderline","theme","border","overflow","white","fontStretch","borderColor","useStyles","customBtn","background","customText","paddingLeft","navigate","useNavigate","classes","responseGoogle","response","localStorage","setItem","profileObj","givenName","imageUrl","console","log","familyName","googleId","axios","method","process","data","then","tokenId","toast","pauseOnHover","autoClose","window","setTimeout","catch","error","hideProgressBar","closeOnClick","draggable","progress","undefined","className","render","renderProps","Button","onClick","disabled","clientId","onSuccess","onFailure","cookiePolicy","gitBtn","gitText","REACT_APP_GITHUB_LOGIN_KEY","buttonText","Stack","direction","err","DropdownComponent","childToParent","React","params","setParams","Box","FormControl","fullWidth","InputLabel","id","sx","inputLab","Select","minWidth","minHeight","boxSizing","labelId","label","onChange","event","target","MenuItem","first","second","third","useState","setData","fileFormat","to","download","CloudDownload","variant","childdata","parentDiv","childDiv","centered_div","stackClass","flexWrap","txtBox","controlledClass","helperText","marginLeft","btnContainer","useForm","resolver","yupResolver","yup","shape","username","userNameValidation","emailValidation","contact_no","contactNoValidation","passwordValidation","confirmPasswordValidation","mode","control","handleSubmit","errors","formState","setValue","onSubmit","templateParams","user_email","to_name","from_name","message","Info","temp","emailjs","res","status","text","name","field","placeholder","type","enableSearch","disableCountryGuess","disableCountryCode","country","e","formattedValue","dialCode","startsWith","replace","dial_code","Checkbox","FileDownload","Github","matches","oneOf"],"sourceRoot":""}