{"version":3,"file":"static/js/724.257759f4.chunk.js","mappings":"0KA4EA,WAAeA,EAAAA,EAAAA,kBAAiB,CAC9BC,OAAQC,2CADV,EAxEoB,SAACC,GACnB,MAAgCC,EAAAA,SAAe,GAA/C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,EAAAA,SAAe,KAAjD,eAAOG,EAAP,KAAkBC,EAAlB,KAEA,SAASC,EAAaC,GACpBJ,EAAYI,EAASC,OAAON,UAC5BG,EAAaE,EAASC,OAAOJ,WAC7BK,OAAOC,OAAOC,KACXC,IAAIC,SAASC,uBAAuB,eACpCC,MAAMb,EAAUE,GAGrB,SAASY,EAAaC,GACJ,GAAZA,EAAIC,KACNC,MAAM,4BACe,GAAZF,EAAIC,MACbC,MAAM,mCAmBV,IAAMC,EAAQ,CAAElB,SAAAA,EAAUE,UAAAA,GAC1B,OACE,UAAC,WAAD,YACE,SAAC,IAAD,CACEiB,GAAI,CACFC,QAAS,OACTC,MAAO,MACPC,eAAgB,MAChBC,OAAQ,OACRC,WAAY,UANhB,UASE,SAAC,IAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAAS,SAACC,GA7BZC,UAAUC,aAEZD,UAAUC,YAAYC,mBACpB3B,EACAU,EAHY,CAAEkB,QAAS,MAMzBzB,OAAOC,OAAOC,KACXC,IAAIC,SAASC,uBAAuB,eACpCC,MAAMb,EAAUE,IAEnBe,MAAM,iDAeJ,iCAQF,SAAC,EAAAP,IAAD,CACEF,OAAQV,EAAMU,OACdyB,KAAM,EAGNC,cAAe,CACbC,IAAKnC,EACLoC,IAAKlC,GAPT,UAUE,SAAC,EAAAmC,OAAD,CAAQC,OAAQpB,EAAOb,SAAU,CAAE8B,IAAKnC,EAAUoC,IAAKlC,OAExDqC,QAAQC,IAAI,mBAAoB1C,EAAMU","sources":["components/GoogleMap/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\nimport { Button, Box } from \"@mui/material\";\r\n\r\nconst MapLocation = (props) => {\r\n  const [latitude, setLatitude] = React.useState(7);\r\n  const [longitude, setLongitude] = React.useState(677);\r\n\r\n  function showLocation(position) {\r\n    setLatitude(position.coords.latitude);\r\n    setLongitude(position.coords.longitude);\r\n    window.google.maps\r\n      .Map(document.getElementsByClassName(\"google-map\"))\r\n      .panTo(latitude, longitude);\r\n  }\r\n\r\n  function errorHandler(err) {\r\n    if (err.code == 1) {\r\n      alert(\"Error: Access is denied!\");\r\n    } else if (err.code == 2) {\r\n      alert(\"Error: Position is unavailable!\");\r\n    }\r\n  }\r\n\r\n  function getLocation() {\r\n    if (navigator.geolocation) {\r\n      var options = { timeout: 60000 };\r\n      navigator.geolocation.getCurrentPosition(\r\n        showLocation,\r\n        errorHandler,\r\n        options\r\n      );\r\n      window.google.maps\r\n        .Map(document.getElementsByClassName(\"google-map\"))\r\n        .panTo(latitude, longitude);\r\n    } else {\r\n      alert(\"Sorry, browser does not support geolocation!\");\r\n    }\r\n  }\r\n  const myPos = { latitude, longitude };\r\n  return (\r\n    <React.Fragment>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          width: \"90%\",\r\n          justifyContent: \"end\",\r\n          height: \"62px\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          onClick={(e) => getLocation()}\r\n        >\r\n          Current Location\r\n        </Button>\r\n      </Box>\r\n      <Map\r\n        google={props.google}\r\n        zoom={3}\r\n        // gestureHandling=\"none\"\r\n        // zoomControl={false}\r\n        initialCenter={{\r\n          lat: latitude,\r\n          lng: longitude,\r\n        }}\r\n      >\r\n        <Marker center={myPos} position={{ lat: latitude, lng: longitude }} />\r\n      </Map>\r\n      {console.log(\"props.google ->>\", props.google)}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: process.env.REACT_APP_GOOGLE_LOCATION,\r\n})(MapLocation);\r\n"],"names":["GoogleApiWrapper","apiKey","process","props","React","latitude","setLatitude","longitude","setLongitude","showLocation","position","coords","window","google","maps","Map","document","getElementsByClassName","panTo","errorHandler","err","code","alert","myPos","sx","display","width","justifyContent","height","alignItems","variant","color","onClick","e","navigator","geolocation","getCurrentPosition","timeout","zoom","initialCenter","lat","lng","Marker","center","console","log"],"sourceRoot":""}